[tool.poetry]
name = "cincoconfig"
version = "0.9.0"
description = "Universal configuration file parser"
authors = ["Adam Meily <meily.adam@gmail.com>"]
readme = "README.md"
repository = "https://github.com/ameily/cincoconfig"
documentation = "https://cincoconfig.readthedocs.io/en/latest/"
keywords = ["config", "configuration"]
license = "ISC"
include = [
    { path = "cincoconfig/VERSION" },
    { path = "CHANGELOG.md", format = "sdist" },
    { path = "LICENSE", format = "sdist" },
    { path = "CONTRIBUTING.md", format = "sdist" },
    { path = "docs", format = "sdist" },
    { path = "tests", format = "sdist" },
    { path = "example.py", format = "sdist" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: ISC License (ISCL)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Application Frameworks"
]



[tool.poetry.dependencies]
python = "^3.7"


[tool.poetry.group.dev.dependencies]
ruff = "^0.0.261"
pyright = "^1.1.302"
sphinx = "*"
sphinx-autodoc-typehints = "^1.22"
sphinx-rtd-theme = "^1.2.0"
coverage = "^7.2.3"
pytest = "^7.3.0"
poethepoet = "^0.19.0"
black = "^23.3.0"


[tool.poetry.group.bson.dependencies]
bson = "*"


[tool.poetry.group.yaml.dependencies]
pyyaml = "*"


[tool.poetry.group.crypto.dependencies]
cryptography = "*"

[tool.ruff]
select = ["E", "F", "I"]
line-length = 99


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
"build-docs" = "sphinx-build docs docs/_build"
"check-format" = [
    { cmd = "black --check cincoconfig tests" },
    { cmd = "ruff --select I cincoconfig" }
]
"check-typing" = "pyright cincoconfig"
checks = [
    "check-format",
    "lint",
    "check-typing"
]
ci = [
    "checks",
    "tests",
    "build-docs"
]
format = [
    { cmd = "black cincoconfig tests" },
    { cmd = "ruff --select I --fix --exit-zero cincoconfig" }
]
lint = "ruff --select E,F cincoconfig"
tests = [
    { cmd = "coverage run --source cincoconfig -m pytest" },
    { cmd = "coverage report -m" }
]
# The check-spelling task is currently disabled until poe fixes CMD resolution on Windows:
# https://github.com/nat-n/poethepoet/pull/142
# "check-spelling" = "npx cspell \"cincoconfig/**/*.py\" \"docs/*.rst\" CHANGELOG.md"
